AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Step 1: Deploy step-1 template in eu-west-2 which includes all the gitsync configuration.

Parameters:
  BranchName:
    Type: String
    Default: main
    Description: Name of the GitHub branch to connect to

  RepositoryName:
    Type: String
    Default: "repo-name"
    Description: Name of the repository to connect to in GitHub

  OwnerId:
    Type: String
    Default: "govuk-one-login"
    Description: The name of the repository owner

  CTEnvironment:
    Type: String
    Description: The Control Tower Environment you are deploying into.
    Default: "default-env"

  CodeStarConnection:
    Type: String
    Default: "arn:aws:ec2:us-west-1:123456789012:instance/i-1234567890abcdef0" #dummy arn to be replaced by build spec env vars
    Description: The approved codestar connection name.

  SecretStoreArn:
    Type: String
    Default: "arn:aws:secretsmanager:us-west-1:123456789012:secret:secret-name" #dummy arn to be replaced by build spec env vars
    Description: The approved secret store name.

Resources:

######################################################################################################################
# Shared Infrastructure for Regional and Global
######################################################################################################################
  GitSyncRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub FMSGitSyncRole-${CTEnvironment}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.sync.codeconnections.amazonaws.com
            Action:
              - 'sts:AssumeRole'
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: !Sub Cloudformation-${CTEnvironment}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:DeleteChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:DescribeStackEvents"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:GetTemplate"
                  - "cloudformation:ListChangeSets"
                  - "cloudformation:ListStacks"
                  - "cloudformation:ValidateTemplate"
                Resource: '*'
        - PolicyName: !Sub Managed-Rules-${CTEnvironment}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "Events:PutRule"
                  - "Events:PutTargets"
                Resource: '*'
                Condition:
                  StringEquals:
                    "events:ManagedBy": "cloudformation.sync.codeconnections.amazonaws.com"
        - PolicyName: !Sub Describe-Rules-${CTEnvironment}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "Events:DescribeRule"
                Resource: '*'
        - PolicyName: !Sub Get-Secrets-${CTEnvironment}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "secretsmanager:GetSecretValue"
                Resource: !Ref SecretStoreArn
        - PolicyName: !Sub Service-Creation-${CTEnvironment}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "firehose:*"
                  - "cloudwatch:CreateMetricStream"
                  - "cloudwatch:DeleteMetricStream"
                  - "cloudwatch:DescribeMetricStreams"
                  - "cloudwatch:PutMetricStream"
                  - "cloudwatch:PutMetricData"
                  - "cloudwatch:GetMetricData"
                  - "cloudwatch:PutMetricAlarm"
                  - "cloudwatch:GetMetricStream"
                  - "kms:*"
                  - "sns:*"
                  - "s3:*"
                Resource: '*'
              - Effect: Allow
                Action:
                  - "secretsmanager:CreateSecret"
                  - "secretsmanager:PutSecretValue"
                  - "secretsmanager:UpdateSecret"
                  - "secretsmanager:DeleteSecret"
                  - "secretsmanager:ListSecrets"
                  - "secretsmanager:DescribeSecret"
                  - "secretsmanager:TagResource"
                  - "secretsmanager:UntagResource"
                Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*
              - Effect: Allow
                Action:
                - iam:CreateRole
                - iam:DeleteRole
                - iam:PutRolePolicy
                - iam:TagRole
                - iam:DeleteRolePolicy
                - iam:GetRole
                - iam:CreateServiceLinkedRole
                Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/*
              - Effect: Allow
                Action:
                - codebuild:*
                - codeconnections:*
                - codepipeline:*
                - codestar-connections:*
                - codestar-notifications:*
                - chatbot:*
                Resource: "*"
        - PolicyName: !Sub FMS-Cloudformation-${CTEnvironment}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - cloudformation:*
              - iam:CreateRole
              - iam:PassRole
              - kms:CreateAlias
              Resource:
              - !Sub arn:aws:cloudformation:*:${AWS::AccountId}:type/resource/*
              - !Sub arn:aws:iam::${AWS::AccountId}:role/*
              - !Sub arn:aws:kms:*:${AWS::AccountId}:key/*
              - !Sub arn:aws:kms:*:${AWS::AccountId}:alias/*
            - Effect: Allow
              Action:
              - cloudformation:CreateUploadBucket
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:CreateChangeSet
              - cloudformation:RegisterType
              - cloudformation:SetTypeDefaultVersion
              - cloudformation:ActivateType
              - cloudformation:RegisterPublisher
              - cloudformation:DeactivateOrganizationsAccess
              - cloudformation:PublishType
              - cloudformation:DeactivateType
              - cloudformation:SetTypeConfiguration
              - cloudformation:DeregisterType
              - cloudformation:CreateGeneratedTemplate
              - sso-oauth:*
              - cloudformation:StartResourceScan
              - cloudformation:UpdateGeneratedTemplate
              - cloudformation:ActivateOrganizationsAccess
              - kms:CreateKey
              - cloudformation:DeleteGeneratedTemplate
              - cloudformation:CreateStackSet
              - cloudformation:TestType
              - config:PutDeliveryChannel
              Resource: "*"
      Tags: 
        - Key: RepositoryName
          Value: !Sub ${RepositoryName}
        - Key: Environment
          Value: !Sub ${CTEnvironment}
      
######################################################################################################################
# Regional Infrastructure
######################################################################################################################
  GitHubRepoLink:
    Type: AWS::CodeStarConnections::RepositoryLink
    Properties:
      ConnectionArn: !Ref CodeStarConnection
      RepositoryName: !Ref RepositoryName
      OwnerId: !Ref OwnerId
      Tags:
           - Key: Name
             Value: !Sub "${RepositoryName}-repo-link"

  GitSyncConfiguration:
    Type: AWS::CodeStarConnections::SyncConfiguration
    Properties:
      Branch: !Ref BranchName
      ConfigFile: !Sub "infrastructure/${CTEnvironment}/aws-metric-streams-client/gitsync.yaml"
      RepositoryLinkId: !GetAtt GitHubRepoLink.RepositoryLinkId
      ResourceName: "aws-metric-streams-client"
      RoleArn: !GetAtt GitSyncRole.Arn
      SyncType: "CFN_STACK_SYNC"
      TriggerResourceUpdateOn: "FILE_CHANGE"
      PublishDeploymentStatus: "ENABLED" 

Outputs:
  IAMRoleARN:
    Description: "The ARN of the IAM Role"
    Value: !GetAtt GitSyncRole.Arn
    Export:
      Name: "IAMRoleARN"
  RepoLinkID:
    Description: "The id of the repo link"
    Value: !GetAtt GitHubRepoLink.RepositoryLinkId
    Export:
      Name: "RepoLinkID"